# Mod√®le de Pr√©diction de D√©faut de Paiement üè¶

## R√©sum√© du Projet

Ce projet vise √† pr√©dire la probabilit√© qu'un emprunteur ne rembourse pas son pr√™t. Un mod√®le de **Gradient Boosting** a √©t√© entra√Æn√© pour analyser les informations des emprunteurs et √©valuer le risque de d√©faut, aidant ainsi les institutions financi√®res √† minimiser leurs pertes.

## Principaux R√©sultats

* **Performance du Mod√®le :** Le mod√®le a atteint un score **ROC-AUC de 0.758**, montrant une bonne capacit√© √† identifier les pr√™ts √† risque.
* **Facteurs de Risque Cl√©s :** Les caract√©ristiques les plus importantes pour pr√©dire un d√©faut de paiement sont le **score de cr√©dit (`CreditScore`)**, le **revenu (`Income`)** et le **montant du pr√™t (`LoanAmount`)**.

## M√©thodologie en Bref

1.  **Pr√©paration des donn√©es :** Nettoyage des donn√©es et transformation des variables cat√©gorielles (One-Hot Encoding).
2.  **Mod√©lisation :** Entra√Ænement et comparaison de plusieurs algorithmes (Random Forest, XGBoost, Gradient Boosting).
3.  **√âvaluation :** Le Gradient Boosting a √©t√© s√©lectionn√© pour sa performance sup√©rieure.
4.  **Analyse :** Identification des facteurs les plus influents gr√¢ce √† l'analyse de l'importance des caract√©ristiques.

## Technologies Utilis√©es

* Python
* Pandas
* Scikit-learn
* XGBoost
* Matplotlib / Seaborn
* Jupyter Notebook

## Comment Lancer le Projet

1.  Clonez ce d√©p√¥t.
2.  Installez les biblioth√®ques n√©cessaires :
    ```bash
    pip install pandas scikit-learn xgboost matplotlib seaborn jupyter
    ```
3.  Assurez-vous que `train.csv` et `test.csv` sont dans le dossier.
4.  Ex√©cutez le notebook `LoanDefaultPrediction.ipynb`.

---